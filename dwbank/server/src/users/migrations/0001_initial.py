# Generated by Django 4.2.5 on 2023-09-12 02:46

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Account_id')),
                ('username', models.CharField(blank=True, max_length=150, null=True, verbose_name='username')),
                ('nick_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nick_name')),
                ('phone_number', models.CharField(max_length=11, unique=True, verbose_name='phone_number')),
                ('email_is_verified', models.BooleanField(default=False, verbose_name='email_is_verified')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('phone_is_verified', models.BooleanField(default=False, verbose_name='Phone_is_verified')),
                ('id_number', models.CharField(max_length=150, verbose_name='Id_number')),
                ('id_card_image', models.ImageField(max_length=1000, upload_to=users.utils.id_card_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'jpg', 'png'])], verbose_name='Id_card_image')),
                ('passport_number', models.CharField(max_length=150, verbose_name='Passport_number')),
                ('passport_image', models.ImageField(max_length=1000, upload_to=users.utils.passport_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'jpg', 'png'])], verbose_name='Passport_image')),
                ('address', models.TextField(verbose_name='Address')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_At')),
                ('birthday', models.DateField(default=datetime.datetime(2023, 9, 12, 2, 46, 12, 236896, tzinfo=datetime.timezone.utc), verbose_name='Birthday')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is_Deleted')),
                ('token', models.CharField(max_length=250, unique=True, verbose_name='Token')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated_At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created_At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is_Deleted')),
                ('sms', models.BooleanField(default=False, verbose_name='Sms')),
                ('email', models.BooleanField(default=True, verbose_name='Email')),
                ('deposit', models.BooleanField(default=True, verbose_name='Deposit')),
                ('deposit_and_withdraw', models.BooleanField(default=False, verbose_name='Deposit_and_withdraw')),
                ('state', models.CharField(choices=[('Success', 'Success'), ('Not_Accepted', 'Not Accepted'), ('Under_Review', 'Under Review')], default='Under_Review', max_length=50, verbose_name='State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
